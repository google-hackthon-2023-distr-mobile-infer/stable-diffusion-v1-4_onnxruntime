 # Copyright (c) 2023 LEI WANG
 # docker build -f docker/Dockerfile.ubuntu-20.04.dev -t sd-v1.4-cpu:latest .

# base image argument, defaul to GPU image
ARG BASE_IMG=ubuntu:20.04
from ${BASE_IMG} as base

ENV DEBIAN_FRONTEND=noninteractive

# Install basic dependencies
RUN apt-get update && apt-get install -y --no-install-recommends apt-utils
RUN apt install -y build-essential \
  software-properties-common \
  libcurl4-openssl-dev \
  manpages-dev \
  wget \
  rsync \
  zlib1g \
  zlib1g-dev \
  git \
  pkg-config \
  vim \
  sudo \
  ssh \
  libssl-dev \
  pbzip2 \
  pv \
  bzip2 \
  unzip \
  devscripts \
  lintian \
  fakeroot \
  dh-make

# install additional tools
RUN apt-get update && apt-get install -y --no-install-recommends make \
    automake \
    autoconf \
    libtool \
    gdb

# install clang tools for building
RUN apt-get install -y --no-install-recommends clang \
    libclang-dev \
    libssl1.1 \
    libssl-dev \
    ccache

# install and upgrade to gcc-11, g++-11, cmake
RUN add-apt-repository -y ppa:ubuntu-toolchain-r/test && apt-get install -y --no-install-recommends cmake \
    gcc-11 \
    g++-11

# switch gcc-9 to gcc-11
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 11 && \
    update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 11

# upgrade glibc repos from 2.31 to 2.35 https://packages.ubuntu.com/jammy/amd64/libc6/download
RUN echo 'deb http://cz.archive.ubuntu.com/ubuntu jammy main' >> /etc/apt/sources.list
# install glibc 2.35 (2.34, 2.33)
RUN apt-get update && apt-get install -y libc6

# install Mambaforge
RUN wget --quiet --progress=bar:force:noscroll https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh -O ~/Mambaforge-Linux-x86_64.sh && \
    /bin/bash ~/Mambaforge-Linux-x86_64.sh -b -p /opt/conda && \
    rm -f ~/Mambaforge-Linux-x86_64.sh && \
    echo "export PATH=/opt/conda/bin:$PATH" >> ~/.bashrc && \
    /bin/bash -c "source ~/.bashrc " && \
    cat ~/.bashrc
ENV PATH /opt/conda/bin:${PATH} 
RUN conda init bash

# use conda-forge
RUN conda config --add channels conda-forge
RUN conda config --set channel_priority strict

# create new env
ENV PY_ENV py3.10-sd-v1.4-cpu
RUN conda create -n $PY_ENV python=3.10 -y

# set default python
ENV PATH /opt/conda/envs/$PY_ENV/bin:$PATH
RUN sed -e '/[ -z "$PS1" ] && return/s/^/#/g' -i ~/.bashrc && \
    echo "export PROMPT_DIRTRIM=1" >> ~/.bashrc && \
    echo "conda activate $PY_ENV" >> ~/.bashrc

RUN apt-get install -y --no-install-recommends git-lfs

SHELL ["/bin/bash", "-c"]
CMD /bin/bash